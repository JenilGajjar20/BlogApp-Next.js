import React, { useState } from "react";
import Head from "next/head";
import Link from "next/link";
import styles from "../styles/Blog.module.css";
import * as fs from "fs";
import InfiniteScroll from "react-infinite-scroll-component";

const Blog = (props) => {
  // console.log(props);
  const [blogs, setBlogs] = useState(props.allBlogs);
  const [count, setCount] = useState(6);

  const fetchData = async () => {
    let d = await fetch(`http://localhost:3000/api/blogs?count=${count + 3}`);
    setCount(count + 3);
    let data = await d.json();
    setBlogs(data);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>iCoder - Blogs</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="keywords" content="next app, blog app" />
      </Head>

      <main className={styles.main}>
        <InfiniteScroll
          dataLength={blogs.length} //This is important field to render the next data
          next={fetchData}
          hasMore={props.allCount !== blogs.length}
          loader={<h4 style={{ textAlign: "center" }}>Loading...</h4>}
          endMessage={
            <p style={{ textAlign: "center" }}>
              <b>Yay! You have seen it all</b>
            </p>
          }
        >
          <div className={styles.blogs}>
            {blogs.map((blog, index) => {
              return (
                <div key={index} className={styles.blogItem}>
                  <Link href={`/blogpost/${blog.slug}`}>
                    <h2>{blog.title}</h2>
                  </Link>
                  <p>
                    {blog.metaContent.substr(0, 250) + "... "}
                    <Link href={`/blogpost/${blog.slug}`}>read more</Link>
                  </p>
                </div>
              );
            })}
          </div>
        </InfiniteScroll>
      </main>
    </div>
  );
};

export async function getStaticProps(context) {
  // let data = await fetch("http://localhost:3000/api/blogs");
  // let allBlogs = await data.json();

  let data = await fs.promises.readdir("blogdata");
  let allCount = data.length;
  let myFile;
  let allBlogs = [];
  for (let i = 0; i < 4; i++) {
    const item = data[i];
    myFile = await fs.promises.readFile("blogdata/" + item, "utf-8");
    allBlogs.push(JSON.parse(myFile));
  }

  return {
    props: {
      allBlogs,
      allCount,
    },
  };
}

export default Blog;
